[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-from-scratch-to-scale"
description = "Building 25 neural network architectures from scratch to understand AI evolution"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "AI From Scratch to Scale", email = "contact@example.com"},
]
keywords = ["neural-networks", "deep-learning", "pytorch", "education", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/your-username/ai-from-scratch-to-scale"
Documentation = "https://github.com/your-username/ai-from-scratch-to-scale/docs"
Repository = "https://github.com/your-username/ai-from-scratch-to-scale.git"
Issues = "https://github.com/your-username/ai-from-scratch-to-scale/issues"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded by ^/ will apply only to files and directories
# in the root of the project.
^/docs/templates/
| ^/docs/examples/
| ^/docs/validation/
| ^/\.vscode/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_third_party = ["torch", "torchvision", "numpy", "pandas", "matplotlib", "seaborn", "wandb", "sklearn"]
known_first_party = ["data_utils", "engine", "plotting", "utils"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
extend_skip_glob = ["docs/templates/*", "docs/examples/*", "docs/validation/*", ".vscode/*"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["data_utils", "engine", "plotting", "utils", "models"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 