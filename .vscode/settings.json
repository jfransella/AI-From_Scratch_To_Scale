{
    // Python Configuration - Using perceptron virtual environment for project isolation
    // All shared packages (utils, data_utils, engine, plotting) installed via 'pip install -e ..'
    "python.defaultInterpreterPath": "./models/01_perceptron/.venv/Scripts/python.exe",
    "python.terminal.activateEnvironment": true,
    // Python Path Configuration for Language Server
    "python.analysis.extraPaths": [
        ".",
        "./data_utils",
        "./engine",
        "./plotting",
        "./utils",
        "./models/01_perceptron/src",
        "./models/02_MLP/src"
    ],
    "python.analysis.autoImportCompletions": true,
    "python.analysis.autoSearchPaths": true,
    // Linting Configuration - Multiple linters for comprehensive code quality
    "python.linting.enabled": true,
    "python.linting.flake8Enabled": true,
    "python.linting.pylintEnabled": true,
    "python.linting.banditEnabled": false,
    "python.linting.mypyEnabled": true,
    "python.languageServer": "Pylance",
    // Flake8 specific settings
    "python.linting.flake8Args": [
        "--config=.flake8"
    ],
    "python.linting.lintOnSave": true,
    "python.linting.maxNumberOfProblems": 100,
    // Pylint specific settings
    "python.linting.pylintArgs": [
        "--rcfile=.pylintrc"
    ],
    "python.linting.ignorePatterns": [
        "docs/templates/**",
        "docs/examples/**",
        "docs/validation/**",
        "Documentation/templates/**"
    ],
    "python.analysis.exclude": [
        "docs/templates/**",
        "docs/examples/**",
        "docs/validation/**",
        "Documentation/templates/**",
        ".vscode/**",
        "**/.venv/**",
        "**/venv/**",
        "**/__pycache__/**",
        "**/.git/**",
        "**/.pytest_cache/**",
        "**/build/**",
        "**/dist/**",
        "**/*.egg-info/**",
        "**/.coverage",
        "**/.mypy_cache/**"
    ],
    // Mypy specific settings  
    "python.linting.mypyArgs": [
        "--config-file=mypy.ini",
        "--show-column-numbers",
        "--no-pretty",
        "--no-error-summary"
    ],
    // Formatting Configuration
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": [
        "--line-length=88"
    ],
    // Import Sorting
    "python.sortImports.args": [
        "--profile=black"
    ],
    // Editor Configuration
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
    },
    "editor.rulers": [
        88
    ],
    // File Associations
    "files.associations": {
        "*.py": "python"
    },
    // Python-specific editor settings
    "[python]": {
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        },
        "editor.formatOnType": false,
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.defaultFormatterOptions": {
            "black-formatter": {
                "lineLength": 88
            }
        }
    },
    // Workspace-specific settings
    "files.exclude": {
        "**/__pycache__": true,
        "**/*.pyc": true,
        "**/.*_cache": true,
        "**/.pytest_cache": true,
        "**/wandb": true,
        "**/mlruns": true,
        "models/*/outputs": true
    },
    // Terminal Configuration
    "terminal.integrated.env.windows": {
        "PYTHONPATH": "${workspaceFolder}"
    },
    // IntelliSense Configuration
    "python.analysis.diagnosticMode": "workspace",
    // Testing Configuration
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": [
        "tests"
    ],
    "python.testing.autoTestDiscoverOnSaveEnabled": true,
    // Jupyter Configuration (for notebooks)
    "jupyter.askForKernelRestart": false,
    "jupyter.defaultKernel": "python",
    "jupyter.enableExtendedKernelCompletions": true,
    "jupyter.generateSVGPlots": true,
    "jupyter.exportWithOutputEnabled": true,
    "jupyter.notebookFileRoot": "${workspaceFolder}",
    "jupyter.variableExplorerExclude": "module;function;builtin_function_or_method",
    "jupyter.themeMatplotlibPlots": true,
    // Git Configuration
    "git.ignoreLimitWarning": true,
    // Pylance/Pyright Configuration
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.completeFunctionParens": true,
    "python.analysis.indexing": true,
    "python.analysis.packageIndexDepths": [
        {
            "name": "torch",
            "depth": 2
        },
        {
            "name": "numpy",
            "depth": 2
        },
        {
            "name": "pandas",
            "depth": 2
        },
        {
            "name": "matplotlib",
            "depth": 2
        },
        {
            "name": "sklearn",
            "depth": 2
        }
    ],
    "python.analysis.stubPath": "./typings",
    "python.analysis.importFormat": "relative",
    "python.analysis.inlayHints.variableTypes": true,
    "python.analysis.inlayHints.functionReturnTypes": true,
    // Additional ML-specific settings
    "python.terminal.executeInFileDir": false,
    "python.terminal.launchArgs": [
        "-X",
        "dev"
    ],
    "python.experiments.enabled": true,
    "python.experiments.optInto": [
        "pythonREPLSmartSend"
    ],
    "jupyter.interactiveWindow.creationMode": "perFile",
    "jupyter.interactiveWindow.textEditor.executeSelection": true,
    "jupyter.interactiveWindow.textEditor.magicCommandsAsComments": true,
    "jupyter.interactiveWindow.codeLens.enable": true,
    // PowerShell Execution Policy Settings
    "terminal.integrated.shellArgs.windows": [
        "-ExecutionPolicy",
        "Bypass"
    ],
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "args": [
                "-ExecutionPolicy",
                "Bypass"
            ]
        }
    },
    "terminal.integrated.defaultProfile.windows": "PowerShell"
}